nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "sgdemux"
    tag "pipeline"

    test("SGDEMUX") {

        when {
            params {
                input         = 'https://raw.githubusercontent.com/nf-core/test-datasets/demultiplex/samplesheet/1.3.0/sgdemux-samplesheet.csv'
                demultiplexer = 'sgdemux'
                outdir        = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(UTILS.removeNextflowVersion("$outputDir")).match("software_versions") },
                { assert workflow.trace.succeeded().size() == 104 },
                { assert snapshot(
                        path("$outputDir/sim-data/metrics.tsv"),
                        path("$outputDir/sim-data/per_project_metrics.tsv"),
                        path("$outputDir/sim-data/per_sample_metrics.tsv"),
                        path("$outputDir/sim-data/sample_barcode_hop_metrics.tsv")
                    ).match("sgdemux") },
                { assert new File("$outputDir/sim-data/Undetermined_S25_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/Undetermined_S25_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s10_S10_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s10_S10_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s11_S11_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s11_S11_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s12_S12_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s12_S12_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s13_S13_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s13_S13_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s14_S14_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s14_S14_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s15_S15_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s15_S15_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s16_S16_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s16_S16_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s17_S17_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s17_S17_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s18_S18_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s18_S18_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s19_S19_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s19_S19_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s1_S1_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s1_S1_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s20_S20_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s20_S20_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s21_S21_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s21_S21_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s22_S22_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s22_S22_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s23_S23_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s23_S23_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s24_S24_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s24_S24_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s2_S2_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s2_S2_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s3_S3_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s3_S3_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s4_S4_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s4_S4_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s5_S5_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s5_S5_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s6_S6_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s6_S6_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s7_S7_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s7_S7_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s8_S8_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s8_S8_L001_2.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s9_S9_L001_1.fastp.fastq.gz").exists() },
                { assert new File("$outputDir/sim-data/s9_S9_L001_2.fastp.fastq.gz").exists() }
            )
        }

    }

}
